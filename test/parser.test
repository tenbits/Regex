UTest({
	'should parse a letter' () {
		var root = Regex.parseGroups('B');
		var literal = root.firstChild;
		eq_(literal.textContent, 'B');
	},
	'should parse groups' () {
		var root = Regex.parseGroups('(?<=Foo)Bar(?!Qux)|dipsi');
		var groups = root.getChildren();

		eq_(groups[0].getChildren()[0].textContent, '?<=Foo');
		eq_(groups[1].textContent, 'Bar');
		eq_(groups[2].getChildren()[0].textContent, '?!Qux');
		eq_(groups[3].type, 3);
		eq_(groups[4].textContent, 'dipsi');
	},
	'should parse group within charclass' () {
		var root = Regex.parseGroups('(?![\\s,)])');
		notEq_(root, null);
	},
	'should parse to simple regex' () {
		var nativeRegex = "(s(hape|ystemId|c(heme|ope|rolling)|ta(ndby|rt)|ize|ummary|pecified|e(ctionRowIndex|lected(Index)?)|rc)|h(space|t(tpEquiv|mlFor)|e(ight|aders)|ref(lang)?)|n(o(Resize|tation(s|Name)|Shade|Href|de(Name|Type|Value)|Wrap)|extSibling|ame)|c(h(ildNodes|Off|ecked|arset)?|ite|o(ntent|o(kie|rds)|de(Base|Type)?|l(s|Span|or)|mpact)|ell(s|Spacing|Padding)|l(ear|assName)|aption)|t(ype|Bodies|itle|Head|ext|a(rget|gName)|Foot)|i(sMap|ndex|d|m(plementation|ages))|o(ptions|wnerDocument|bject)|d(i(sabled|r)|o(c(type|umentElement)|main)|e(clare|f(er|ault(Selected|Checked|Value)))|at(eTime|a))|useMap|p(ublicId|arentNode|r(o(file|mpt)|eviousSibling))|e(n(ctype|tities)|vent|lements)|v(space|ersion|alue(Type)?|Link|Align)|URL|f(irstChild|orm(s)?|ace|rame(Border)?)|width|l(ink(s)?|o(ngDesc|wSrc)|a(stChild|ng|bel))|a(nchors|c(ce(ssKey|pt(Charset)?)|tion)|ttributes|pplets|l(t|ign)|r(chive|eas)|xis|Link|bbr)|r(ow(s|Span|Index)|ules|e(v|ferrer|l|adOnly))|m(ultiple|e(thod|dia)|a(rgin(Height|Width)|xLength))|b(o(dy|rder)|ackground|gColor))\\b"
		var str = "(?<=\\.)" + nativeRegex;
		var rgx = new Regex(str);

		var lookbehind = rgx.root.firstChild;
		var regex = lookbehind.nextSibling;
		eq_(regex.textContent, nativeRegex);
	},
	'should move B anchor to literal': {
		'simple move to literal' () {
			var rgx = new Regex('\\b(?<=FOO)BAZ');
			eq_(rgx.root.lastChild.textContent, '\\bBAZ');
		},
		'simple wrap of the group' () {
			var rgx = new Regex('(BAZ|QUX)(?=FOO)\\b');
			eq_(rgx.root.firstChild.textContent, '((?:BAZ|QUX))\\b(?=FOO)');
		},
		'move to group items' () {
			var rgx = new Regex('(BAZ|((?<!q)QUX))(?=FOO)\\b');
			var str = rgx.root.toString();
			eq_(str, '(BAZ\\b|(((q)$)QUX\\b))(?=FOO)');
		}
	},
	'should parse possessive group without exception' () {
		var rgx = new Regex("(?x)   ( ( ( a ( s ) d ) ) )++ ");
	},
	'!should parse lookahead' () {
		var rgx = new Regex("\"/(?=(\\\\.|[^\"/])++/[imsxeADSUXu]*\")");
		var match = rgx.match('var a = "/as/"');
		eq_(match.value, '"/');
	}
})
